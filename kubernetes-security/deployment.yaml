apiVersion: v1
kind: ConfigMap # создаем конфигурацию для использования в NGINX
metadata:
  name: cmap-webserver
  namespace: homework
  labels:
    HW: kuber-homework
data:
  nginx.conf: |
    events {}
    http {
      server {
          listen 8000;
          root /homework;

          location / {
            autoindex on;
          }
          location /conf/file {
            alias /homework/conf/index.html;
          }
      }
    }
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: dpl-webserver
  namespace: homework
  labels:
    HW: deployment-kuber-homework
spec:
  replicas: 3 # количество подов которое мы хотим запустить
  strategy:
    type: RollingUpdate
    rollingUpdate:
       maxSurge: 1 # максимальное колическтво подов запущенное поверх сузествующих
       maxUnavailable: 1 # максимальное количество подов выключенных для обновления
  selector:
    matchLabels:
      name: deployment-webserver
  template:
    metadata:
      labels:
        name: deployment-webserver
        HW: kuber-homework
    spec:
#      nodeSelector:
#        homework: "true"  # указыввем требуемый Labal ноды  для размещения подов
      serviceAccountName: monitoring
      volumes:
        - name: vol-httproot
          persistentVolumeClaim:
            claimName: pvc-homework
        - name: vol-nginx-config
          configMap:
            name: cmap-webserver
        - name: vol-random-cm-homework
          configMap:
            name: cm-homework
            items:
              - key: config_index_html
                path: index.html

      initContainers:
        - name: initindex
          image: alpine
          volumeMounts:
            - name: vol-httproot
              mountPath: "/init"
          command:
            - /bin/sh
            - -c
            - |
              echo "My index html from HW 4.  POD name - $(hostname)" > /init/index.html
      containers:
        - name: webserver
          image: nginx
          ports:
            - containerPort: 8000
          readinessProbe:
            # exec:
            #   command:
            #     - cat
            #     - /homework/index.html
            # initialDelaySeconds: 5
            # periodSeconds: 5

            httpGet:
              path: /index.html
              port: 8000
              httpHeaders:
                - name: Custom-Header
                  value: Awesome
            initialDelaySeconds: 5
            periodSeconds: 5

          volumeMounts:
            - name: vol-httproot
              mountPath: "/homework"
            - name: vol-nginx-config
              mountPath: /etc/nginx/nginx.conf
              subPath: nginx.conf
            - name: vol-random-cm-homework
              mountPath: /homework/conf/
          lifecycle:
            preStop:
              exec:
                command:
                  - /bin/sh
                  - -c
                  - |
                    rm -f /homework/index.html
          resources:
            requests:
              memory: "200Mi"
              cpu: "250m"
            limits:
              memory: "400Mi"
              cpu: "500m"
